
-------------------Firebase Firestore-------------------

const db = getFireStore

//create collection

const collRef = collection(db, "books")




//get documents data

getDocs(colRef).then((snapshot) => {

	let books = []

	snapshot.docs.forEach((doc) => {
	books.push({ ...doc.data(), id: doc.id })

  })
  console.log(books)
}).catch(err => {console.log(err.message)})





//add documents data

addDoc(collRef, {
	title: dummyTitle,
	author: dummyAuthor
}).then(() => {

	dummyTitle = ""
	dummyAuthor = ""

})






//delete documents data

const docRef = doc(db, "books", dummyDataId)

deleteDoc(docRef).then(() => {

	dummyForm.reset()

})






//real time collection data

onSnapshot(collRef, (snapshot) => {

	let books = []

	snapshot.docs.forEach((doc) => {
	books.push({ ...doc.data(), id: doc.id })

})




//queries

const q = query(colRef, where("author", "==", "patrick rothfuss"))

//queries with orderBy

const q = query(colRef, where("author", "==", "patrick rothfuss"), orderBy("title","desc"))






//add documents data with serverTimestamp

addDoc(collRef, {
	title: dummyTitle,
	author: dummyAuthor
	createdAt: serverTimestamp()
}).then(() => {

	dummyTitle = ""
	dummyAuthor = ""

})





//get a single document

const docRef = doc(db, "books", dummyBookId)

getDoc(docRef).this((doc) => {

	console.log(doc.data(), doc.id)

})




//update a single document


const docRef = doc(db, "books", dummyBookId)

updateDoc(docRef, NewDummyBookData).then(() => {dummyForm.reset()})


-------------------Firebase Auth-------------------

const db = getFireStore()
const auth = getAuth()

//signing users up

createUserWithEmailAndPassword(auth, dummyEmail, dummyPassword).then((cred) => {

	console.log("User created: ",cred)

})




//signed out

signOut(auth).then(() => {console.log("the user signed out")})





//sign in

signInWithEmailAndPassword(auth, dummyEmail, dummyPassword).then(() => {

	console.log("the user sign in")

})





//subscribing to auth changes

onAuthStateChanged(auth, (user) => {

	console.log("user status changed:", user)

})



//unsubscribing on changes

const unsubCol = onSnapshot(collRef, (snapshot) => {

	let books = []

	snapshot.docs.forEach((doc) => {
	books.push({ ...doc.data(), id: doc.id })

})

unsubCol()












